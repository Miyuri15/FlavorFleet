services:
  delivery-service:
    container_name: delivery-service
    build: ./backend/microservices/delivery-service
    volumes:
      - ./backend/microservices/delivery-service:/app
    ports:
      - "5001:5001"
    networks:
      - app-network

    env_file:
      - ./backend/microservices/delivery-service/.env

  order-service:
    container_name: order-service
    build: ./backend/microservices/order-service
    volumes:
      - ./backend/microservices/order-service:/app
    ports:
      - "5000:5000"
    networks:
      - app-network
    environment:
      - DOCKERIZED=true
    env_file:
      - ./backend/microservices/order-service/.env

  payment-service:
    container_name: payment-service
    build: ./backend/microservices/payment-service
    volumes:
      - ./backend/microservices/payment-service:/app
    ports:
      - "5002:5002"
    networks:
      - app-network
    env_file:
      - ./backend/microservices/payment-service/.env

  restaurant-service:
    container_name: restaurant-service
    build: ./backend/microservices/restaurant-service
    volumes:
      - ./backend/microservices/restaurant-service:/app
    ports:
      - "5003:5003"
    networks:
      - app-network
    environment:
      - DOCKERIZED=true
    env_file:
      - ./backend/microservices/restaurant-service/.env

  user-service:
    container_name: user-service
    build: ./backend/microservices/user-service
    volumes:
      - ./backend/microservices/user-service:/app
    ports:
      - "5004:5004"
    networks:
      - app-network
    environment:
      - DOCKERIZED=true
    env_file:
      - ./backend/microservices/user-service/.env

  gateway:
    container_name: gateway
    build: ./backend/gateway
    depends_on:
      - restaurant-service
      - delivery-service
      - order-service
      - payment-service
      - user-service
    volumes:
      - ./backend/gateway:/app
    ports:
      - "8000:8000"
    networks:
      - app-network
    env_file:
      - ./backend/gateway/.env

  frontend:
    container_name: frontend
    build: ./frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true

networks:
  app-network:
    driver: bridge
